{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;;;AAOjD,MAAM,YAAY;IALzB;QAOE,UAAK,GAAG,sBAAsB,CAAC;QAC/B,SAAI,GAAG,IAAI,wDAAS,CAAC;YACnB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;KAuBJ;IArBC,QAAQ;IAER,CAAC;IACD,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC;IAED,eAAe,CAAC,EAAO;QACrB,IAAI,OAAO,EAAE,CAAC,cAAc,IAAI,QAAQ,EAAE;YACtC,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;SACzD;aAAM,IAAI,OAAO,EAAE,CAAC,eAAe,IAAI,WAAW,EAAE;YACjD,EAAE,CAAC,KAAK,EAAE,CAAC;YACX,IAAI,KAAK,GAAG,EAAE,CAAC,eAAe,EAAE,CAAC;YACjC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACtB,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;QACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC;;wEA3BU,YAAY;4FAAZ,YAAY;;;;;;QCKzB,oEAAG;QAAA,8FAAmC;QAAA,4DAAI;QAC1C,0EAAyB;QACvB,8EAA0S;QAAzB,mIAAS,kBAAc,IAAC;QAAzS,4DAA0S;QAC5S,4DAAO;;QAFD,0DAAkB;QAAlB,+EAAkB;QACkM,0DAAwD;QAAxD,0IAAwD;;;;;;;;;;;;;;ACdlR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACX;AACmB;AACjB;AAEF;;AAgBxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAPJ;YACP,uEAAa;YACb,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,8DAAiB;SAClB;mIAIU,SAAS,mBAZlB,2DAAY,aAGZ,uEAAa;QACb,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,8DAAiB;;;;;;;;;;;;;;;;;;;ACjB0B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild(\"amountInput\") amountInput: any;\n  title = 'currency-input-tests';\n  form = new FormGroup({\n    amount: new FormControl('')\n  });\n\n  ngOnInit() {\n\n  }\n  ngAfterViewInit() {\n    this.amountInput.nativeElement.focus();\n  }\n  onInputClick() {\n    this.moveCursorToEnd(this.amountInput.nativeElement);\n  }\n\n  moveCursorToEnd(el: any) {\n    if (typeof el.selectionStart == \"number\") {\n        el.selectionStart = el.selectionEnd = el.value.length;\n    } else if (typeof el.createTextRange != \"undefined\") {\n        el.focus();\n        var range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n    }\n    console.log('moved curser to end?')\n  }\n}\n","<style>\nhtml, body {\n  font-family: Roboto, Helvetica, Arial;\n  font-size: 18px;\n}\ninput {\n  font-size: 20px;\n  max-width: 90%;\n  padding: 5px;\n  margin: 10px auto;\n}\n</style>\n\n<p>Paypal Style currency amount input:</p>\n<form [formGroup]='form'>\n  <input aria-label=\"Feld zur Eingabe des Betrags\" data-nemo=\"amount\" dir=\"ltr\" autocomplete=\"off\" type=\"tel\" name=\"amount\" id=\"fn-amount\" required class=\"ppaf-input\" currencyMask #amountInput formControlName=\"amount\" [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" (click)=\"onInputClick()\">\n</form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxCurrencyModule } from \"ngx-currency\";\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxCurrencyModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}